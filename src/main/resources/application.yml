server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

  cloud:
    gateway:

      default-filters:    # global filter 등록
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true



      routes:
#        - id: user-service
#          # uri: http://localhost:8081/
#          uri: lb://USER-SERVICE  # 유레카 서버로 전송하겠다.
#          predicates:
#            - Path=/user-service/**      # 위의 uri로 이동한다.

        - id: user-service
          uri: lb://USER-SERVICE  # 유레카 서버로 전송하겠다.
          predicates:
            - Path=/user-service/login      # 위의 uri로 이동한다.
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie #
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}  # 이러한 패턴으로 들어오는 데이터는 뒤쪽에 있는 형태로 바꾼다.

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie #
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/welcome  # welcome만 빼고 싶으면 이렇게하면 됨
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # 회원 서비스 기타 요청
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter



        - id: catalog-service
          uri: lb://CATALOG-SERVICE  # 유레카 서버로 전송하겠다.
          predicates:
            - Path=/catalog-service/**      # 위의 uri로 이동한다.
        - id: order-service
          uri: lb://ORDER-SERVICE  # 유레카 서버로 전송하겠다.
          predicates:
            - Path=/order-service/**      # 위의 uri로 이동한다.
        - id: first-service
          uri: lb://MY-FIRST-SERVICE  # 유레카 서버로 전송하겠다.
          predicates:
            - Path=/first-service/**      # 위의 uri로 이동한다.
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          # uri: http://localhost:8082/
          uri: lb://MY-SECOND-SERVICE  # 유레카 서버로 전송하겠다.
          predicates:
            - Path=/second-service/**      # 위의 uri로 이동한다.
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

#token:
#  secret: user_token          # 토큰 만들 때 사용할 꺼임. 아무값이나 넣어도됨

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh # HttpTraceRepository를 등록해야 httptrace 사용 가능